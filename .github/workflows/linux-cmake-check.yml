# Nightly Linux run.

name: CMake checks

on:
  push:
    branches:
  workflow_dispatch:

env:
  LLVM_VERSION: "11.0"
  LLVM_REPO: https://github.com/dbabokin/llvm-project
  LLVM_TAR: llvm-11.0.0-ubuntu16.04-Release+Asserts-x86.arm.wasm.tar.xz
  SDE_TAR_NAME: sde-external-8.59.0-2020-10-05-lin

jobs:
  # Simple build "cmake .."
  linux-simple:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install dependencies
      run: |
        echo "APT::Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-retries
        sudo apt-get update
        sudo apt-get install bison flex libc6-dev-i386 g++-multilib lib32stdc++6 ncurses-dev
        wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 5 $LLVM_REPO/releases/download/llvm-$LLVM_VERSION-ispc-dev/$LLVM_TAR
        tar xf $LLVM_TAR
        echo "${GITHUB_WORKSPACE}/bin-$LLVM_VERSION/bin" >> $GITHUB_PATH

    - name: Check environment
      run: |
        ./check_env.py
        which -a clang
        cat /proc/cpuinfo

    - name: Build package
      run: |
        echo PATH=$PATH
        mkdir build && cd build
        cmake ..
        make -j4

    - name: Sanity testing (make check-all, make test)
      run: |
        cd build
        bin/check_isa
        bin/ispc --support-matrix
        make check-all

    - name: Upload package
      uses: actions/upload-artifact@v2
      with:
        name: cmake_simple_linux
        path: build/ispc

  # Cross build with package
  linux-cross-package:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Install dependencies
      run: |
        echo "APT::Acquire::Retries \"3\";" | sudo tee -a /etc/apt/apt.conf.d/80-retries
        sudo apt-get update
        sudo apt-get install bison flex libc6-dev-i386 g++-multilib lib32stdc++6 ncurses-dev
        wget --retry-connrefused --waitretry=5 --read-timeout=20 --timeout=15 -t 5 $LLVM_REPO/releases/download/llvm-$LLVM_VERSION-ispc-dev/$LLVM_TAR
        tar xf $LLVM_TAR
        echo "${GITHUB_WORKSPACE}/bin-$LLVM_VERSION/bin" >> $GITHUB_PATH

    - name: Check environment
      run: |
        ./check_env.py
        which -a clang
        cat /proc/cpuinfo

    - name: Build package
      run: |
        echo PATH=$PATH
        mkdir build && cd build
        cmake .. -DISPC_CROSS=ON -DISPC_PREPARE_PACKAGE=ON
        make -j4 package

    - name: Sanity testing (make check-all, make test)
      run: |
        cd build
        bin/check_isa
        bin/ispc --support-matrix
        make check-all

    - name: Upload package
      uses: actions/upload-artifact@v2
      with:
        name: cmake_cross_package_linux
        path: build/ispc-trunk-linux.tar.gz

